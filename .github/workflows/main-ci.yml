name: Kryptokrona API Main Pipeline

env:
  GITHUB_REGISTRY: "ghcr.io"
  GITHUB_OWNER: "mjovanc"
  GITHUB_DOCKER_IMAGE: "kryptokrona-api"

on:
  push:
    branches:
      - master

jobs:
  assemble:
    name: Assemble
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up OpenJDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Assemble
        run: ./gradlew assemble

      - name: Upload Build Directory Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-dir
          path: |
            build/

  static-code-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    needs: [ assemble ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up OpenJDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Temporarily
        run: echo "hello"

#      - name: Checking Style
#        run: ./gradlew checkstyleMain
#
#      - name: Checking Duplicated Code
#        run: ./gradlew cpdCheck
#
#      - name: Checking Bugs
#        run: ./gradlew spotbugsMain
#
#      - name: Checking Code Standard
#        run: ./gradlew pmdMain

  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    needs: [ assemble ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up OpenJDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Run Unit Test
        run: ./gradlew test

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: [ assemble ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up OpenJDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Run Code Coverage
        run: echo "Hello"

  javadoc:
    name: Javadocs
    runs-on: ubuntu-latest
    needs: [ code-coverage ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up OpenJDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Generate JavaDoc
        run: ./gradlew javadoc

  docker:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: [ javadoc ]
    steps:
      - uses: actions/checkout@v2
      - uses: benjlevesque/short-sha@v1.2

      - name: Log into registry ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Download Build Directory
        uses: actions/download-artifact@v3
        with:
          name: build-dir

      - name: Build Docker
        run: |
          ls -la
          docker build -t $GITHUB_REGISTRY/$GITHUB_OWNER/$GITHUB_DOCKER_IMAGE:${{ env.SHA }} . --no-cache

      - name: Tag Image
        run: |
          docker tag $GITHUB_REGISTRY/$GITHUB_OWNER/$GITHUB_DOCKER_IMAGE:${{ env.SHA }} $GITHUB_REGISTRY/$GITHUB_OWNER/$GITHUB_DOCKER_IMAGE:latest

      - name: Publish Docker to GitHub Repository
        run: |
          docker push $GITHUB_REGISTRY/$GITHUB_OWNER/$GITHUB_DOCKER_IMAGE:${{ env.SHA }}
          docker push $GITHUB_REGISTRY/$GITHUB_OWNER/$GITHUB_DOCKER_IMAGE:latest
