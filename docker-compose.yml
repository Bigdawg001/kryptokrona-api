version: '3.7'

services:
  db:
    image: postgres
    container_name: kryptokrona_api_db
    restart: always
    environment:
      POSTGRES_DB: kryptokrona_api_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test1234
    volumes:
      - db:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - kryptokrona_api_net

  liquibase:
    image: liquibase/liquibase
    container_name: kryptokrona_api_liquibase
    command: --defaults-file /liquibase/liquibase.properties --changeLogFile=db/changelog/master.xml update
    volumes:
      - ./src/main/resources/db/changelog:/liquibase/db/changelog
      - ./liquibase.properties:/liquibase/liquibase.properties
    depends_on:
      - db
    networks:
      - kryptokrona_api_net

  monitor:
    build: monitor
    container_name: kryptokrona_api_monitor
    environment:
     PRIVATE_GITHUB_TOKEN: change-me
    ports:
      - "3000:3000"
    networks:
      - kryptokrona_api_net

  backend:
    build: .
    container_name: kryptokrona_api_backend
    environment:
      DB_URL: jdbc:postgresql://db:5432/kryptokrona_api_dev
      NODE_HOSTNAME: techy.ddns.net
      NODE_PORT: 11898
      NODE_SSL: false
    ports:
      - "8080:8080"
    depends_on:
      - liquibase
    networks:
      - kryptokrona_api_net

  prometheus:
    image: prom/prometheus:latest
    container_name: kryptokrona_api_prometheus
    ports:
      - "9090:9090"

  keycloak:
    image: jboss/keycloak
    container_name: kryptokrona_api_keycloak
    restart: always
    environment:
      DB_VENDOR: h2
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password
      PROXY_ADDRESS_FORWARDING: "true"
    volumes:
      - keycloak:/var/lib/keycloak/data
      - ./keycloak/realm-export.json:/opt/jboss/keycloak/realm-export.json
    expose:
      - 11111
    ports:
      - "11111:11111"
    command:
      - "-b 0.0.0.0"
      - "-Djboss.http.port=11111"
      - "-Dkeycloak.import=/opt/jboss/keycloak/realm-export.json"
    networks:
      - kryptokrona_api_net


volumes:
  db:
  keycloak:

networks:
  kryptokrona_api_net:
    driver: bridge